{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Django Virtual Fields","text":"<p>Django Virtual Fields enables you to define model <code>fields</code> from computed database <code>expressions</code>.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install from PyPi</p> <pre><code>pip install django-virtual-fields\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Here's an example <code>model.py</code>.</p> <pre><code>from django.db import models as m\nfrom django.db.models.fields.json import KT\nfrom django.db.models.functions import Concat, Extract, Now\n\n# \nfrom virtual_fields.models import VirtualField\n\nclass Person(m.Model):\n    # Model fields\n    first_name: str = m.CharField(max_length=100)\n    last_name: str = m.CharField(max_length=100)\n    dob: \"date\" = m.DateField(\"date of birth\")\n    extra_data: dict = m.JSONField(default=dict(city=\"My City\", country=\"My Country\"))\n\n    # Virtual fields\n    yob: int = VirtualField(\"dob__year\", verbose_name=\"year of birth\")\n    age: int = VirtualField(Extract(Now(), \"year\") - m.F(\"yob\"), defer=False)\n\n    city: str = VirtualField[m.CharField](KT(\"extra_data__city\"))\n    country: str = VirtualField[m.CharField](KT(\"extra_data__country\"))\n\n    full_name: str = VirtualField[m.CharField]()\n    @full_name.expression\n    def full_name_expressions(cls):\n        return Concat(\"first_name\", Value(\" \"), \"last_name\")\n</code></pre>"}]}