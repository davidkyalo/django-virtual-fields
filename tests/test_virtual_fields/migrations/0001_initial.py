# Generated by Django 4.2.1 on 2023-06-25 03:57

from django.db import migrations, models
import django.db.models.deletion
import tests.test_virtual_fields.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TestModel_C",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.testmodel_c",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.testmodel_c",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_c"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_c"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.testmodel_c",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.testmodel_c",
                    ),
                ),
            ],
            options={
                "verbose_name": "test model C",
            },
        ),
        migrations.CreateModel(
            name="TestModel_B",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.testmodel_b",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.testmodel_b",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_b"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_b"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.testmodel_b",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.testmodel_b",
                    ),
                ),
            ],
            options={
                "verbose_name": "test model B",
            },
        ),
        migrations.CreateModel(
            name="TestModel_A",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.testmodel_a",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.testmodel_a",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_a"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel_a"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.testmodel_a",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.testmodel_a",
                    ),
                ),
            ],
            options={
                "verbose_name": "test model A",
            },
        ),
        migrations.CreateModel(
            name="TestModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.testmodel",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.testmodel",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.testmodel"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.testmodel",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.testmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "test model",
            },
        ),
        migrations.CreateModel(
            name="FieldModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.fieldmodel"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.fieldmodel"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Field Implementation",
            },
        ),
        migrations.CreateModel(
            name="AltFieldModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booleanfield", models.BooleanField(blank=True, null=True)),
                ("textfield", models.TextField(blank=True, null=True)),
                ("charfield", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "emailfield",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield", models.SlugField(blank=True, null=True)),
                ("urlfield", models.URLField(blank=True, null=True)),
                ("filefield", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield", models.FloatField(blank=True, null=True)),
                ("bigintegerfield", models.BigIntegerField(blank=True, null=True)),
                ("integerfield", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("smallintegerfield", models.SmallIntegerField(blank=True, null=True)),
                (
                    "positivesmallintegerfield",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield", models.DateField(blank=True, null=True)),
                ("datetimefield", models.DateTimeField(blank=True, null=True)),
                ("durationfield", models.DurationField(blank=True, null=True)),
                ("timefield", models.TimeField(blank=True, null=True)),
                ("binaryfield", models.BinaryField(blank=True, null=True)),
                ("uuidfield", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield", models.JSONField(blank=True, null=True)),
                (
                    "json",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                ("booleanfield_2", models.BooleanField(blank=True, null=True)),
                ("textfield_2", models.TextField(blank=True, null=True)),
                (
                    "charfield_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailfield_2",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("slugfield_2", models.SlugField(blank=True, null=True)),
                ("urlfield_2", models.URLField(blank=True, null=True)),
                ("filefield_2", models.FileField(blank=True, null=True, upload_to="")),
                ("filepathfield_2", models.FilePathField(blank=True, null=True)),
                (
                    "decimalfield_2",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=14, null=True
                    ),
                ),
                ("floatfield_2", models.FloatField(blank=True, null=True)),
                ("bigintegerfield_2", models.BigIntegerField(blank=True, null=True)),
                ("integerfield_2", models.IntegerField(blank=True, null=True)),
                (
                    "positivebigintegerfield_2",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                (
                    "smallintegerfield_2",
                    models.SmallIntegerField(blank=True, null=True),
                ),
                (
                    "positivesmallintegerfield_2",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                (
                    "positiveintegerfield_2",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("datefield_2", models.DateField(blank=True, null=True)),
                ("datetimefield_2", models.DateTimeField(blank=True, null=True)),
                ("durationfield_2", models.DurationField(blank=True, null=True)),
                ("timefield_2", models.TimeField(blank=True, null=True)),
                ("binaryfield_2", models.BinaryField(blank=True, null=True)),
                ("uuidfield_2", models.UUIDField(blank=True, null=True)),
                (
                    "genericipaddressfield_2",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("jsonfield_2", models.JSONField(blank=True, null=True)),
                (
                    "json_2",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=tests.test_virtual_fields.models.JSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "foreignkey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse",
                        to="test_virtual_fields.altfieldmodel",
                    ),
                ),
                (
                    "foreignkey_2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreignkey_reverse_2",
                        to="test_virtual_fields.altfieldmodel",
                    ),
                ),
                (
                    "manytomanyfield",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.altfieldmodel"
                    ),
                ),
                (
                    "manytomanyfield_2",
                    models.ManyToManyField(
                        blank=True, to="test_virtual_fields.altfieldmodel"
                    ),
                ),
                (
                    "onetoonefield",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse",
                        to="test_virtual_fields.altfieldmodel",
                    ),
                ),
                (
                    "onetoonefield_2",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="onetoonefield_reverse_2",
                        to="test_virtual_fields.altfieldmodel",
                    ),
                ),
                (
                    "to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alt",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
                (
                    "to_many",
                    models.ManyToManyField(
                        blank=True,
                        related_name="alt_many",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
                (
                    "to_one",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alt_one",
                        to="test_virtual_fields.fieldmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alt-Field Implementation",
            },
        ),
    ]
